This is gmp.info, produced by makeinfo version 4.2 from gmp.texi.

This manual describes how to install and use the GNU multiple precision
arithmetic library, version 4.1.2.

   Copyright 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
2001, 2002 Free Software Foundation, Inc.

   Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation License, Version
1.1 or any later version published by the Free Software Foundation;
with no Invariant Sections, with the Front-Cover Texts being "A GNU
Manual", and with the Back-Cover Texts being "You have freedom to copy
and modify this GNU Manual, like GNU software".  A copy of the license
is included in *Note GNU Free Documentation License::.
INFO-DIR-SECTION GNU libraries
START-INFO-DIR-ENTRY
* gmp: (gmp).                   GNU Multiple Precision Arithmetic Library.
END-INFO-DIR-ENTRY


File: gmp.info,  Node: Function Index,  Prev: Concept Index,  Up: Top

Function and Type Index
***********************

* Menu:

* *mpz_export:                           Integer Import and Export.
* __GNU_MP_VERSION:                      Useful Macros and Constants.
* __GNU_MP_VERSION_MINOR:                Useful Macros and Constants.
* __GNU_MP_VERSION_PATCHLEVEL:           Useful Macros and Constants.
* _mpz_realloc:                          Initializing Integers.
* abs <1>:                               C++ Interface Floats.
* abs <2>:                               C++ Interface Rationals.
* abs:                                   C++ Interface Integers.
* allocate_function:                     Custom Allocation.
* ceil:                                  C++ Interface Floats.
* cmp <1>:                               C++ Interface Integers.
* cmp <2>:                               C++ Interface Rationals.
* cmp:                                   C++ Interface Floats.
* deallocate_function:                   Custom Allocation.
* floor:                                 C++ Interface Floats.
* gcd:                                   BSD Compatible Functions.
* gmp_asprintf:                          Formatted Output Functions.
* gmp_fprintf:                           Formatted Output Functions.
* gmp_fscanf:                            Formatted Input Functions.
* GMP_LIMB_BITS:                         Low-level Functions.
* GMP_NAIL_BITS:                         Low-level Functions.
* GMP_NAIL_MASK:                         Low-level Functions.
* GMP_NUMB_BITS:                         Low-level Functions.
* GMP_NUMB_MASK:                         Low-level Functions.
* GMP_NUMB_MAX:                          Low-level Functions.
* gmp_obstack_printf:                    Formatted Output Functions.
* gmp_obstack_vprintf:                   Formatted Output Functions.
* gmp_printf:                            Formatted Output Functions.
* gmp_randclass:                         C++ Interface Random Numbers.
* gmp_randclass::get_f:                  C++ Interface Random Numbers.
* gmp_randclass::get_z_bits:             C++ Interface Random Numbers.
* gmp_randclass::get_z_range:            C++ Interface Random Numbers.
* gmp_randclass::gmp_randclass:          C++ Interface Random Numbers.
* gmp_randclass::seed:                   C++ Interface Random Numbers.
* gmp_randclear:                         Random State Initialization.
* gmp_randinit:                          Random State Initialization.
* gmp_randinit_default:                  Random State Initialization.
* gmp_randinit_lc_2exp:                  Random State Initialization.
* gmp_randinit_lc_2exp_size:             Random State Initialization.
* gmp_randseed:                          Random State Seeding.
* gmp_randseed_ui:                       Random State Seeding.
* gmp_scanf:                             Formatted Input Functions.
* gmp_snprintf:                          Formatted Output Functions.
* gmp_sprintf:                           Formatted Output Functions.
* gmp_sscanf:                            Formatted Input Functions.
* gmp_vasprintf:                         Formatted Output Functions.
* gmp_version:                           Useful Macros and Constants.
* gmp_vfprintf:                          Formatted Output Functions.
* gmp_vfscanf:                           Formatted Input Functions.
* gmp_vprintf:                           Formatted Output Functions.
* gmp_vscanf:                            Formatted Input Functions.
* gmp_vsnprintf:                         Formatted Output Functions.
* gmp_vsprintf:                          Formatted Output Functions.
* gmp_vsscanf:                           Formatted Input Functions.
* hypot:                                 C++ Interface Floats.
* itom:                                  BSD Compatible Functions.
* madd:                                  BSD Compatible Functions.
* mcmp:                                  BSD Compatible Functions.
* mdiv:                                  BSD Compatible Functions.
* mfree:                                 BSD Compatible Functions.
* min:                                   BSD Compatible Functions.
* mout:                                  BSD Compatible Functions.
* move:                                  BSD Compatible Functions.
* mp_bits_per_limb:                      Useful Macros and Constants.
* mp_limb_t:                             Nomenclature and Types.
* mp_set_memory_functions:               Custom Allocation.
* mpf_abs:                               Float Arithmetic.
* mpf_add:                               Float Arithmetic.
* mpf_add_ui:                            Float Arithmetic.
* mpf_ceil:                              Miscellaneous Float Functions.
* mpf_class:                             C++ Interface General.
* mpf_class::fits_sint_p:                C++ Interface Floats.
* mpf_class::fits_slong_p:               C++ Interface Floats.
* mpf_class::fits_sshort_p:              C++ Interface Floats.
* mpf_class::fits_uint_p:                C++ Interface Floats.
* mpf_class::fits_ulong_p:               C++ Interface Floats.
* mpf_class::fits_ushort_p:              C++ Interface Floats.
* mpf_class::get_d:                      C++ Interface Floats.
* mpf_class::get_mpf_t:                  C++ Interface General.
* mpf_class::get_prec:                   C++ Interface Floats.
* mpf_class::get_si:                     C++ Interface Floats.
* mpf_class::get_ui:                     C++ Interface Floats.
* mpf_class::mpf_class:                  C++ Interface Floats.
* mpf_class::set_prec:                   C++ Interface Floats.
* mpf_class::set_prec_raw:               C++ Interface Floats.
* mpf_clear:                             Initializing Floats.
* mpf_cmp:                               Float Comparison.
* mpf_cmp_d:                             Float Comparison.
* mpf_cmp_si:                            Float Comparison.
* mpf_cmp_ui:                            Float Comparison.
* mpf_div:                               Float Arithmetic.
* mpf_div_2exp:                          Float Arithmetic.
* mpf_div_ui:                            Float Arithmetic.
* mpf_eq:                                Float Comparison.
* mpf_fits_sint_p:                       Miscellaneous Float Functions.
* mpf_fits_slong_p:                      Miscellaneous Float Functions.
* mpf_fits_sshort_p:                     Miscellaneous Float Functions.
* mpf_fits_uint_p:                       Miscellaneous Float Functions.
* mpf_fits_ulong_p:                      Miscellaneous Float Functions.
* mpf_fits_ushort_p:                     Miscellaneous Float Functions.
* mpf_floor:                             Miscellaneous Float Functions.
* mpf_get_d:                             Converting Floats.
* mpf_get_d_2exp:                        Converting Floats.
* mpf_get_default_prec:                  Initializing Floats.
* mpf_get_prec:                          Initializing Floats.
* mpf_get_si:                            Converting Floats.
* mpf_get_str:                           Converting Floats.
* mpf_get_ui:                            Converting Floats.
* mpf_init:                              Initializing Floats.
* mpf_init2:                             Initializing Floats.
* mpf_init_set:                          Simultaneous Float Init & Assign.
* mpf_init_set_d:                        Simultaneous Float Init & Assign.
* mpf_init_set_si:                       Simultaneous Float Init & Assign.
* mpf_init_set_str:                      Simultaneous Float Init & Assign.
* mpf_init_set_ui:                       Simultaneous Float Init & Assign.
* mpf_inp_str:                           I/O of Floats.
* mpf_integer_p:                         Miscellaneous Float Functions.
* mpf_mul:                               Float Arithmetic.
* mpf_mul_2exp:                          Float Arithmetic.
* mpf_mul_ui:                            Float Arithmetic.
* mpf_neg:                               Float Arithmetic.
* mpf_out_str:                           I/O of Floats.
* mpf_pow_ui:                            Float Arithmetic.
* mpf_random2:                           Miscellaneous Float Functions.
* mpf_reldiff:                           Float Comparison.
* mpf_set:                               Assigning Floats.
* mpf_set_d:                             Assigning Floats.
* mpf_set_default_prec:                  Initializing Floats.
* mpf_set_prec:                          Initializing Floats.
* mpf_set_prec_raw:                      Initializing Floats.
* mpf_set_q:                             Assigning Floats.
* mpf_set_si:                            Assigning Floats.
* mpf_set_str:                           Assigning Floats.
* mpf_set_ui:                            Assigning Floats.
* mpf_set_z:                             Assigning Floats.
* mpf_sgn:                               Float Comparison.
* mpf_sqrt:                              Float Arithmetic.
* mpf_sqrt_ui:                           Float Arithmetic.
* mpf_sub:                               Float Arithmetic.
* mpf_sub_ui:                            Float Arithmetic.
* mpf_swap:                              Assigning Floats.
* mpf_t:                                 Nomenclature and Types.
* mpf_trunc:                             Miscellaneous Float Functions.
* mpf_ui_div:                            Float Arithmetic.
* mpf_ui_sub:                            Float Arithmetic.
* mpf_urandomb:                          Miscellaneous Float Functions.
* mpfr_class:                            C++ Interface MPFR.
* mpn_add:                               Low-level Functions.
* mpn_add_1:                             Low-level Functions.
* mpn_add_n:                             Low-level Functions.
* mpn_addmul_1:                          Low-level Functions.
* mpn_bdivmod:                           Low-level Functions.
* mpn_cmp:                               Low-level Functions.
* mpn_divexact_by3:                      Low-level Functions.
* mpn_divexact_by3c:                     Low-level Functions.
* mpn_divmod:                            Low-level Functions.
* mpn_divmod_1:                          Low-level Functions.
* mpn_divrem:                            Low-level Functions.
* mpn_divrem_1:                          Low-level Functions.
* mpn_gcd:                               Low-level Functions.
* mpn_gcd_1:                             Low-level Functions.
* mpn_gcdext:                            Low-level Functions.
* mpn_get_str:                           Low-level Functions.
* mpn_hamdist:                           Low-level Functions.
* mpn_lshift:                            Low-level Functions.
* mpn_mod_1:                             Low-level Functions.
* mpn_mul:                               Low-level Functions.
* mpn_mul_1:                             Low-level Functions.
* mpn_mul_n:                             Low-level Functions.
* mpn_perfect_square_p:                  Low-level Functions.
* mpn_popcount:                          Low-level Functions.
* mpn_random:                            Low-level Functions.
* mpn_random2:                           Low-level Functions.
* mpn_rshift:                            Low-level Functions.
* mpn_scan0:                             Low-level Functions.
* mpn_scan1:                             Low-level Functions.
* mpn_set_str:                           Low-level Functions.
* mpn_sqrtrem:                           Low-level Functions.
* mpn_sub:                               Low-level Functions.
* mpn_sub_1:                             Low-level Functions.
* mpn_sub_n:                             Low-level Functions.
* mpn_submul_1:                          Low-level Functions.
* mpn_tdiv_qr:                           Low-level Functions.
* mpq_abs:                               Rational Arithmetic.
* mpq_add:                               Rational Arithmetic.
* mpq_canonicalize:                      Rational Number Functions.
* mpq_class:                             C++ Interface General.
* mpq_class::canonicalize:               C++ Interface Rationals.
* mpq_class::get_d:                      C++ Interface Rationals.
* mpq_class::get_den:                    C++ Interface Rationals.
* mpq_class::get_den_mpz_t:              C++ Interface Rationals.
* mpq_class::get_mpq_t:                  C++ Interface General.
* mpq_class::get_num:                    C++ Interface Rationals.
* mpq_class::get_num_mpz_t:              C++ Interface Rationals.
* mpq_class::mpq_class:                  C++ Interface Rationals.
* mpq_clear:                             Initializing Rationals.
* mpq_cmp:                               Comparing Rationals.
* mpq_cmp_si:                            Comparing Rationals.
* mpq_cmp_ui:                            Comparing Rationals.
* mpq_denref:                            Applying Integer Functions.
* mpq_div:                               Rational Arithmetic.
* mpq_div_2exp:                          Rational Arithmetic.
* mpq_equal:                             Comparing Rationals.
* mpq_get_d:                             Rational Conversions.
* mpq_get_den:                           Applying Integer Functions.
* mpq_get_num:                           Applying Integer Functions.
* mpq_get_str:                           Rational Conversions.
* mpq_init:                              Initializing Rationals.
* mpq_inp_str:                           I/O of Rationals.
* mpq_inv:                               Rational Arithmetic.
* mpq_mul:                               Rational Arithmetic.
* mpq_mul_2exp:                          Rational Arithmetic.
* mpq_neg:                               Rational Arithmetic.
* mpq_numref:                            Applying Integer Functions.
* mpq_out_str:                           I/O of Rationals.
* mpq_set:                               Initializing Rationals.
* mpq_set_d:                             Rational Conversions.
* mpq_set_den:                           Applying Integer Functions.
* mpq_set_f:                             Rational Conversions.
* mpq_set_num:                           Applying Integer Functions.
* mpq_set_si:                            Initializing Rationals.
* mpq_set_str:                           Initializing Rationals.
* mpq_set_ui:                            Initializing Rationals.
* mpq_set_z:                             Initializing Rationals.
* mpq_sgn:                               Comparing Rationals.
* mpq_sub:                               Rational Arithmetic.
* mpq_swap:                              Initializing Rationals.
* mpq_t:                                 Nomenclature and Types.
* mpz_abs:                               Integer Arithmetic.
* mpz_add:                               Integer Arithmetic.
* mpz_add_ui:                            Integer Arithmetic.
* mpz_addmul:                            Integer Arithmetic.
* mpz_addmul_ui:                         Integer Arithmetic.
* mpz_and:                               Integer Logic and Bit Fiddling.
* mpz_array_init:                        Initializing Integers.
* mpz_bin_ui:                            Number Theoretic Functions.
* mpz_bin_uiui:                          Number Theoretic Functions.
* mpz_cdiv_q:                            Integer Division.
* mpz_cdiv_q_2exp:                       Integer Division.
* mpz_cdiv_q_ui:                         Integer Division.
* mpz_cdiv_qr:                           Integer Division.
* mpz_cdiv_qr_ui:                        Integer Division.
* mpz_cdiv_r:                            Integer Division.
* mpz_cdiv_r_2exp:                       Integer Division.
* mpz_cdiv_r_ui:                         Integer Division.
* mpz_cdiv_ui:                           Integer Division.
* mpz_class:                             C++ Interface General.
* mpz_class::fits_sint_p:                C++ Interface Integers.
* mpz_class::fits_slong_p:               C++ Interface Integers.
* mpz_class::fits_sshort_p:              C++ Interface Integers.
* mpz_class::fits_uint_p:                C++ Interface Integers.
* mpz_class::fits_ulong_p:               C++ Interface Integers.
* mpz_class::fits_ushort_p:              C++ Interface Integers.
* mpz_class::get_d:                      C++ Interface Integers.
* mpz_class::get_mpz_t:                  C++ Interface General.
* mpz_class::get_si:                     C++ Interface Integers.
* mpz_class::get_ui:                     C++ Interface Integers.
* mpz_class::mpz_class:                  C++ Interface Integers.
* mpz_clear:                             Initializing Integers.
* mpz_clrbit:                            Integer Logic and Bit Fiddling.
* mpz_cmp:                               Integer Comparisons.
* mpz_cmp_d:                             Integer Comparisons.
* mpz_cmp_si:                            Integer Comparisons.
* mpz_cmp_ui:                            Integer Comparisons.
* mpz_cmpabs:                            Integer Comparisons.
* mpz_cmpabs_d:                          Integer Comparisons.
* mpz_cmpabs_ui:                         Integer Comparisons.
* mpz_com:                               Integer Logic and Bit Fiddling.
* mpz_congruent_2exp_p:                  Integer Division.
* mpz_congruent_p:                       Integer Division.
* mpz_congruent_ui_p:                    Integer Division.
* mpz_divexact:                          Integer Division.
* mpz_divexact_ui:                       Integer Division.
* mpz_divisible_2exp_p:                  Integer Division.
* mpz_divisible_p:                       Integer Division.
* mpz_divisible_ui_p:                    Integer Division.
* mpz_even_p:                            Miscellaneous Integer Functions.
* mpz_fac_ui:                            Number Theoretic Functions.
* mpz_fdiv_q:                            Integer Division.
* mpz_fdiv_q_2exp:                       Integer Division.
* mpz_fdiv_q_ui:                         Integer Division.
* mpz_fdiv_qr:                           Integer Division.
* mpz_fdiv_qr_ui:                        Integer Division.
* mpz_fdiv_r:                            Integer Division.
* mpz_fdiv_r_2exp:                       Integer Division.
* mpz_fdiv_r_ui:                         Integer Division.
* mpz_fdiv_ui:                           Integer Division.
* mpz_fib2_ui:                           Number Theoretic Functions.
* mpz_fib_ui:                            Number Theoretic Functions.
* mpz_fits_sint_p:                       Miscellaneous Integer Functions.
* mpz_fits_slong_p:                      Miscellaneous Integer Functions.
* mpz_fits_sshort_p:                     Miscellaneous Integer Functions.
* mpz_fits_uint_p:                       Miscellaneous Integer Functions.
* mpz_fits_ulong_p:                      Miscellaneous Integer Functions.
* mpz_fits_ushort_p:                     Miscellaneous Integer Functions.
* mpz_gcd:                               Number Theoretic Functions.
* mpz_gcd_ui:                            Number Theoretic Functions.
* mpz_gcdext:                            Number Theoretic Functions.
* mpz_get_d:                             Converting Integers.
* mpz_get_d_2exp:                        Converting Integers.
* mpz_get_si:                            Converting Integers.
* mpz_get_str:                           Converting Integers.
* mpz_get_ui:                            Converting Integers.
* mpz_getlimbn:                          Converting Integers.
* mpz_hamdist:                           Integer Logic and Bit Fiddling.
* mpz_import:                            Integer Import and Export.
* mpz_init:                              Initializing Integers.
* mpz_init2:                             Initializing Integers.
* mpz_init_set:                          Simultaneous Integer Init & Assign.
* mpz_init_set_d:                        Simultaneous Integer Init & Assign.
* mpz_init_set_si:                       Simultaneous Integer Init & Assign.
* mpz_init_set_str:                      Simultaneous Integer Init & Assign.
* mpz_init_set_ui:                       Simultaneous Integer Init & Assign.
* mpz_inp_raw:                           I/O of Integers.
* mpz_inp_str:                           I/O of Integers.
* mpz_invert:                            Number Theoretic Functions.
* mpz_ior:                               Integer Logic and Bit Fiddling.
* mpz_jacobi:                            Number Theoretic Functions.
* mpz_kronecker:                         Number Theoretic Functions.
* mpz_kronecker_si:                      Number Theoretic Functions.
* mpz_kronecker_ui:                      Number Theoretic Functions.
* mpz_lcm:                               Number Theoretic Functions.
* mpz_lcm_ui:                            Number Theoretic Functions.
* mpz_legendre:                          Number Theoretic Functions.
* mpz_lucnum2_ui:                        Number Theoretic Functions.
* mpz_lucnum_ui:                         Number Theoretic Functions.
* mpz_mod:                               Integer Division.
* mpz_mod_ui:                            Integer Division.
* mpz_mul:                               Integer Arithmetic.
* mpz_mul_2exp:                          Integer Arithmetic.
* mpz_mul_si:                            Integer Arithmetic.
* mpz_mul_ui:                            Integer Arithmetic.
* mpz_neg:                               Integer Arithmetic.
* mpz_nextprime:                         Number Theoretic Functions.
* mpz_odd_p:                             Miscellaneous Integer Functions.
* mpz_out_raw:                           I/O of Integers.
* mpz_out_str:                           I/O of Integers.
* mpz_perfect_power_p:                   Integer Roots.
* mpz_perfect_square_p:                  Integer Roots.
* mpz_popcount:                          Integer Logic and Bit Fiddling.
* mpz_pow_ui:                            Integer Exponentiation.
* mpz_powm:                              Integer Exponentiation.
* mpz_powm_ui:                           Integer Exponentiation.
* mpz_probab_prime_p:                    Number Theoretic Functions.
* mpz_random:                            Integer Random Numbers.
* mpz_random2:                           Integer Random Numbers.
* mpz_realloc2:                          Initializing Integers.
* mpz_remove:                            Number Theoretic Functions.
* mpz_root:                              Integer Roots.
* mpz_rrandomb:                          Integer Random Numbers.
* mpz_scan0:                             Integer Logic and Bit Fiddling.
* mpz_scan1:                             Integer Logic and Bit Fiddling.
* mpz_set:                               Assigning Integers.
* mpz_set_d:                             Assigning Integers.
* mpz_set_f:                             Assigning Integers.
* mpz_set_q:                             Assigning Integers.
* mpz_set_si:                            Assigning Integers.
* mpz_set_str:                           Assigning Integers.
* mpz_set_ui:                            Assigning Integers.
* mpz_setbit:                            Integer Logic and Bit Fiddling.
* mpz_sgn:                               Integer Comparisons.
* mpz_si_kronecker:                      Number Theoretic Functions.
* mpz_size:                              Miscellaneous Integer Functions.
* mpz_sizeinbase:                        Miscellaneous Integer Functions.
* mpz_sqrt:                              Integer Roots.
* mpz_sqrtrem:                           Integer Roots.
* mpz_sub:                               Integer Arithmetic.
* mpz_sub_ui:                            Integer Arithmetic.
* mpz_submul:                            Integer Arithmetic.
* mpz_submul_ui:                         Integer Arithmetic.
* mpz_swap:                              Assigning Integers.
* mpz_t:                                 Nomenclature and Types.
* mpz_tdiv_q:                            Integer Division.
* mpz_tdiv_q_2exp:                       Integer Division.
* mpz_tdiv_q_ui:                         Integer Division.
* mpz_tdiv_qr:                           Integer Division.
* mpz_tdiv_qr_ui:                        Integer Division.
* mpz_tdiv_r:                            Integer Division.
* mpz_tdiv_r_2exp:                       Integer Division.
* mpz_tdiv_r_ui:                         Integer Division.
* mpz_tdiv_ui:                           Integer Division.
* mpz_tstbit:                            Integer Logic and Bit Fiddling.
* mpz_ui_kronecker:                      Number Theoretic Functions.
* mpz_ui_pow_ui:                         Integer Exponentiation.
* mpz_ui_sub:                            Integer Arithmetic.
* mpz_urandomb:                          Integer Random Numbers.
* mpz_urandomm:                          Integer Random Numbers.
* mpz_xor:                               Integer Logic and Bit Fiddling.
* msqrt:                                 BSD Compatible Functions.
* msub:                                  BSD Compatible Functions.
* mtox:                                  BSD Compatible Functions.
* mult:                                  BSD Compatible Functions.
* operator%:                             C++ Interface Integers.
* operator/:                             C++ Interface Integers.
* operator<<:                            C++ Formatted Output.
* operator>> <1>:                        C++ Formatted Input.
* operator>> <2>:                        C++ Interface Rationals.
* operator>>:                            C++ Formatted Input.
* pow:                                   BSD Compatible Functions.
* reallocate_function:                   Custom Allocation.
* rpow:                                  BSD Compatible Functions.
* sdiv:                                  BSD Compatible Functions.
* sgn <1>:                               C++ Interface Floats.
* sgn <2>:                               C++ Interface Integers.
* sgn:                                   C++ Interface Rationals.
* sqrt <1>:                              C++ Interface Floats.
* sqrt:                                  C++ Interface Integers.
* trunc:                                 C++ Interface Floats.
* xtom:                                  BSD Compatible Functions.


